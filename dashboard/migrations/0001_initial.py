# Generated by Django 5.2.5 on 2025-08-24 05:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminSettings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('running', models.BooleanField(default=False)),
                ('thread_name', models.TextField(default='')),
                ('alarms', models.BooleanField(default=True)),
                ('interval', models.IntegerField(default=5)),
                ('balancesa', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Candle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.TextField(blank=True, default='', null=True)),
                ('coin', models.CharField(choices=[('BTC', 'BTC'), ('ETH', 'ETH'), ('TRX', 'TRX'), ('SOL', 'SOL')], default='BTC')),
                ('interval', models.CharField(choices=[('1m', '1m'), ('3m', '3m'), ('5m', '5m'), ('15m', '15m'), ('30m', '30m'), ('1h', '1h')], default='1m')),
                ('open_time', models.BigIntegerField(default=0)),
                ('open', models.FloatField(default=0)),
                ('high', models.FloatField(default=0)),
                ('low', models.FloatField(default=0)),
                ('close', models.FloatField(default=0)),
                ('volume', models.FloatField(default=0)),
                ('close_time', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, default='', null=True)),
                ('coin', models.CharField(choices=[('BTC', 'BTC'), ('ETH', 'ETH'), ('TRX', 'TRX'), ('SOL', 'SOL')], default='ETH')),
                ('position_type', models.CharField(choices=[('short', 'short'), ('long', 'long')], default='long')),
                ('coin_amount', models.FloatField(default=0)),
                ('entry_capital', models.FloatField(default=0)),
                ('entry_price', models.FloatField(default=0)),
                ('min_profit_exit_price', models.FloatField(default=0)),
                ('stop_loss_price', models.FloatField(default=0)),
                ('initial_stop_loss_price', models.FloatField(default=0)),
                ('uuid', models.TextField(blank=True, default='', null=True)),
                ('active', models.BooleanField(default=True)),
                ('state', models.CharField(choices=[('in_loss', 'in_loss'), ('reaching_min_profit_exit_price', 'reaching_min_profit_exit_price'), ('post_min_profit_exit_price', 'post_min_profit_exit_price'), ('exited_in_loss', 'exited_in_loss'), ('exited_in_profit', 'exited_in_profit')], default='reaching_min_profit_exit_price')),
                ('exit_price', models.FloatField(default=0)),
                ('stop_loss_price_increased', models.BooleanField(default=False)),
                ('profit_amount_at_min_profit_exit_price', models.FloatField(default=0)),
                ('loss_amount_at_stop_loss_price', models.FloatField(default=0)),
                ('risk_factor', models.FloatField(default=0)),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('value', models.FloatField(blank=True, default=0, null=True)),
                ('growth_usd', models.FloatField(blank=True, default=0, null=True)),
                ('growth_percentage_from_entry_price', models.FloatField(blank=True, default=0, null=True)),
                ('growth_percentage_from_stop_loss_price', models.FloatField(blank=True, default=0, null=True)),
                ('growth_percentage_from_min_profit_exit_price', models.FloatField(blank=True, default=0, null=True)),
                ('final_profit_usd', models.FloatField(default=0)),
                ('epoch_created', models.BigIntegerField(default=0)),
                ('epoch_updated', models.BigIntegerField(default=0)),
                ('epoch_closed', models.BigIntegerField(default=0)),
                ('display_on_chart', models.BooleanField(default=False)),
                ('auto_exit', models.BooleanField(default=False)),
                ('transaction_hash', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.TextField(blank=True, default='', null=True)),
                ('event_type', models.CharField(choices=[('stop_loss_price_increased', 'stop_loss_price_increased'), ('stop_loss_price_occured_but_auto_exit_is_off', 'stop_loss_price_occured_but_auto_exit_is_off'), ('exited', 'exited')], default='stop_loss_price_increased')),
                ('needs_notification', models.BooleanField(default=False)),
                ('description', models.TextField(default='')),
                ('epoch_created', models.BigIntegerField(default=0)),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.position')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('eth_to_dai', 'eth_to_dai'), ('dai_to_eth', 'dai_to_eth')], default='eth_to_dai')),
                ('state', models.CharField(choices=[('transaction_state_ongoing', 'transaction_state_ongoing'), ('transaction_state_failed', 'transaction_state_failed'), ('transaction_state_succesful', 'transaction_state_succesful')], default='transaction_state_ongoing')),
                ('uniswap_version', models.CharField(choices=[('uniswap_v2', 'uniswap_v2'), ('uniswap_v3', 'uniswap_v3')], default='uniswap_v2')),
                ('dai_amount_spent', models.FloatField(default=0)),
                ('eth_amount_recieved', models.FloatField(default=0)),
                ('eth_amount_spent', models.FloatField(default=0)),
                ('dai_amount_recieved', models.FloatField(default=0)),
                ('eth_nominal_price', models.FloatField(default=0)),
                ('eth_effective_price', models.FloatField(default=0)),
                ('slipage', models.FloatField(default=0)),
                ('hash', models.TextField(blank=True, default='', null=True)),
                ('fee', models.FloatField(default=0)),
                ('uuid', models.TextField(blank=True, default='', null=True)),
                ('name', models.TextField(blank=True, default='', null=True)),
                ('epoch_created', models.BigIntegerField(default=0)),
                ('epoch_updated', models.BigIntegerField(default=0)),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.position')),
            ],
        ),
    ]
